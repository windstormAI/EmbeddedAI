{"ast":null,"code":"/**\n * Project Context\n * Manages project state and operations\n */import React,{createContext,useContext,useState,useEffect}from'react';import api from'../utils/api';import{useAuth}from'./AuthContext';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const ProjectContext=/*#__PURE__*/createContext();export const useProject=()=>{const context=useContext(ProjectContext);if(!context){throw new Error('useProject must be used within a ProjectProvider');}return context;};export const ProjectProvider=_ref=>{let{children}=_ref;const{user}=useAuth();const[projects,setProjects]=useState([]);const[currentProject,setCurrentProject]=useState(null);const[loading,setLoading]=useState(false);const[components,setComponents]=useState([]);// Load user's projects on mount\nuseEffect(()=>{if(user){loadProjects();loadComponents();}},[user]);const loadProjects=async()=>{try{setLoading(true);const response=await api.get('/projects');setProjects(response.data.data);}catch(error){console.error('Failed to load projects:',error);toast.error('Failed to load projects');}finally{setLoading(false);}};const loadComponents=async()=>{try{const response=await api.get('/components');setComponents(response.data.data);}catch(error){console.error('Failed to load components:',error);toast.error('Failed to load components');}};const createProject=async projectData=>{try{setLoading(true);const response=await api.post('/projects',projectData);const newProject=response.data.data;setProjects(prev=>[newProject,...prev]);setCurrentProject(newProject);toast.success('Project created successfully!');return{success:true,project:newProject};}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to create project';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const updateProject=async(projectId,updates)=>{try{setLoading(true);const response=await api.put(\"/projects/\".concat(projectId),updates);const updatedProject=response.data.data;setProjects(prev=>prev.map(project=>project._id===projectId?updatedProject:project));if((currentProject===null||currentProject===void 0?void 0:currentProject._id)===projectId){setCurrentProject(updatedProject);}toast.success('Project updated successfully!');return{success:true,project:updatedProject};}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Failed to update project';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const deleteProject=async projectId=>{try{setLoading(true);await api.delete(\"/projects/\".concat(projectId));setProjects(prev=>prev.filter(project=>project._id!==projectId));if((currentProject===null||currentProject===void 0?void 0:currentProject._id)===projectId){setCurrentProject(null);}toast.success('Project deleted successfully!');return{success:true};}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Failed to delete project';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const loadProject=async projectId=>{try{setLoading(true);const response=await api.get(\"/projects/\".concat(projectId));const project=response.data.data;setCurrentProject(project);return{success:true,project};}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Failed to load project';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const updateCircuit=async(projectId,circuitData)=>{try{const response=await api.put(\"/projects/\".concat(projectId,\"/circuit\"),{circuitData});const updatedProject=response.data.data;if((currentProject===null||currentProject===void 0?void 0:currentProject._id)===projectId){setCurrentProject(updatedProject);}return{success:true,project:updatedProject};}catch(error){var _error$response5,_error$response5$data;const message=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||'Failed to update circuit';toast.error(message);return{success:false,error:message};}};const updateCode=async(projectId,code)=>{try{const response=await api.put(\"/projects/\".concat(projectId,\"/code\"),{code});const updatedProject=response.data.data;if((currentProject===null||currentProject===void 0?void 0:currentProject._id)===projectId){setCurrentProject(updatedProject);}return{success:true,project:updatedProject};}catch(error){var _error$response6,_error$response6$data;const message=((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.error)||'Failed to update code';toast.error(message);return{success:false,error:message};}};const duplicateProject=async(projectId,newName)=>{try{const originalProject=projects.find(p=>p._id===projectId);if(!originalProject){throw new Error('Project not found');}const duplicatedData={name:newName||\"\".concat(originalProject.name,\" (Copy)\"),description:originalProject.description,boardType:originalProject.boardType,codeLanguage:originalProject.codeLanguage,circuitData:originalProject.circuitData,code:originalProject.code};return await createProject(duplicatedData);}catch(error){toast.error('Failed to duplicate project');return{success:false,error:error.message};}};const value={projects,currentProject,components,loading,loadProjects,loadComponents,createProject,updateProject,deleteProject,loadProject,updateCircuit,updateCode,duplicateProject,setCurrentProject};return/*#__PURE__*/_jsx(ProjectContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","useAuth","toast","jsx","_jsx","ProjectContext","useProject","context","Error","ProjectProvider","_ref","children","user","projects","setProjects","currentProject","setCurrentProject","loading","setLoading","components","setComponents","loadProjects","loadComponents","response","get","data","error","console","createProject","projectData","post","newProject","prev","success","project","_error$response","_error$response$data","message","updateProject","projectId","updates","put","concat","updatedProject","map","_id","_error$response2","_error$response2$data","deleteProject","delete","filter","_error$response3","_error$response3$data","loadProject","_error$response4","_error$response4$data","updateCircuit","circuitData","_error$response5","_error$response5$data","updateCode","code","_error$response6","_error$response6$data","duplicateProject","newName","originalProject","find","p","duplicatedData","name","description","boardType","codeLanguage","value","Provider"],"sources":["/workspace/client/src/context/ProjectContext.js"],"sourcesContent":["/**\n * Project Context\n * Manages project state and operations\n */\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport { useAuth } from './AuthContext';\nimport toast from 'react-hot-toast';\n\nconst ProjectContext = createContext();\n\nexport const useProject = () => {\n  const context = useContext(ProjectContext);\n  if (!context) {\n    throw new Error('useProject must be used within a ProjectProvider');\n  }\n  return context;\n};\n\nexport const ProjectProvider = ({ children }) => {\n  const { user } = useAuth();\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [components, setComponents] = useState([]);\n\n  // Load user's projects on mount\n  useEffect(() => {\n    if (user) {\n      loadProjects();\n      loadComponents();\n    }\n  }, [user]);\n\n  const loadProjects = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/projects');\n      setProjects(response.data.data);\n    } catch (error) {\n      console.error('Failed to load projects:', error);\n      toast.error('Failed to load projects');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadComponents = async () => {\n    try {\n      const response = await api.get('/components');\n      setComponents(response.data.data);\n    } catch (error) {\n      console.error('Failed to load components:', error);\n      toast.error('Failed to load components');\n    }\n  };\n\n  const createProject = async (projectData) => {\n    try {\n      setLoading(true);\n      const response = await api.post('/projects', projectData);\n      const newProject = response.data.data;\n\n      setProjects(prev => [newProject, ...prev]);\n      setCurrentProject(newProject);\n\n      toast.success('Project created successfully!');\n      return { success: true, project: newProject };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Failed to create project';\n      toast.error(message);\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateProject = async (projectId, updates) => {\n    try {\n      setLoading(true);\n      const response = await api.put(`/projects/${projectId}`, updates);\n      const updatedProject = response.data.data;\n\n      setProjects(prev =>\n        prev.map(project =>\n          project._id === projectId ? updatedProject : project\n        )\n      );\n\n      if (currentProject?._id === projectId) {\n        setCurrentProject(updatedProject);\n      }\n\n      toast.success('Project updated successfully!');\n      return { success: true, project: updatedProject };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Failed to update project';\n      toast.error(message);\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteProject = async (projectId) => {\n    try {\n      setLoading(true);\n      await api.delete(`/projects/${projectId}`);\n\n      setProjects(prev => prev.filter(project => project._id !== projectId));\n\n      if (currentProject?._id === projectId) {\n        setCurrentProject(null);\n      }\n\n      toast.success('Project deleted successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Failed to delete project';\n      toast.error(message);\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadProject = async (projectId) => {\n    try {\n      setLoading(true);\n      const response = await api.get(`/projects/${projectId}`);\n      const project = response.data.data;\n\n      setCurrentProject(project);\n      return { success: true, project };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Failed to load project';\n      toast.error(message);\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateCircuit = async (projectId, circuitData) => {\n    try {\n      const response = await api.put(`/projects/${projectId}/circuit`, {\n        circuitData\n      });\n\n      const updatedProject = response.data.data;\n\n      if (currentProject?._id === projectId) {\n        setCurrentProject(updatedProject);\n      }\n\n      return { success: true, project: updatedProject };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Failed to update circuit';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const updateCode = async (projectId, code) => {\n    try {\n      const response = await api.put(`/projects/${projectId}/code`, { code });\n\n      const updatedProject = response.data.data;\n\n      if (currentProject?._id === projectId) {\n        setCurrentProject(updatedProject);\n      }\n\n      return { success: true, project: updatedProject };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Failed to update code';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const duplicateProject = async (projectId, newName) => {\n    try {\n      const originalProject = projects.find(p => p._id === projectId);\n      if (!originalProject) {\n        throw new Error('Project not found');\n      }\n\n      const duplicatedData = {\n        name: newName || `${originalProject.name} (Copy)`,\n        description: originalProject.description,\n        boardType: originalProject.boardType,\n        codeLanguage: originalProject.codeLanguage,\n        circuitData: originalProject.circuitData,\n        code: originalProject.code\n      };\n\n      return await createProject(duplicatedData);\n    } catch (error) {\n      toast.error('Failed to duplicate project');\n      return { success: false, error: error.message };\n    }\n  };\n\n  const value = {\n    projects,\n    currentProject,\n    components,\n    loading,\n    loadProjects,\n    loadComponents,\n    createProject,\n    updateProject,\n    deleteProject,\n    loadProject,\n    updateCircuit,\n    updateCode,\n    duplicateProject,\n    setCurrentProject\n  };\n\n  return (\n    <ProjectContext.Provider value={value}>\n      {children}\n    </ProjectContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}