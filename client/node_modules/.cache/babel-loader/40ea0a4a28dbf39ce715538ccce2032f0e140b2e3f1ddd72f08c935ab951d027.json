{"ast":null,"code":"/**\n * Authentication Context\n * Manages user authentication state and API calls\n */import React,{createContext,useContext,useState,useEffect}from'react';import api from'../utils/api';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(localStorage.getItem('token'));// Initialize authentication on mount\nuseEffect(()=>{initializeAuth();},[]);// Set up axios interceptors for authentication\nuseEffect(()=>{// Request interceptor\nconst requestInterceptor=api.interceptors.request.use(config=>{if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>Promise.reject(error));// Response interceptor\nconst responseInterceptor=api.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Token expired or invalid\nlogout();toast.error('Session expired. Please login again.');}return Promise.reject(error);});return()=>{api.interceptors.request.eject(requestInterceptor);api.interceptors.response.eject(responseInterceptor);};},[token]);const initializeAuth=async()=>{try{const storedToken=localStorage.getItem('token');if(storedToken){setToken(storedToken);// Verify token with server\nconst response=await api.get('/api/v1/auth/me');setUser(response.data.data);}}catch(error){console.error('Auth initialization failed:',error);localStorage.removeItem('token');setToken(null);}finally{setLoading(false);}};const login=async(email,password)=>{try{setLoading(true);const response=await api.post('/api/v1/auth/login',{email,password});const{token:newToken,user:userData}=response.data.data;setToken(newToken);setUser(userData);localStorage.setItem('token',newToken);toast.success('Login successful!');return{success:true};}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Login failed';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const register=async userData=>{try{setLoading(true);const response=await api.post('/api/v1/auth/register',userData);const{token:newToken,user:newUser}=response.data.data;setToken(newToken);setUser(newUser);localStorage.setItem('token',newToken);toast.success('Registration successful!');return{success:true};}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Registration failed';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('token');toast.success('Logged out successfully');};const updateProfile=async updates=>{try{const response=await api.put('/api/v1/auth/me',updates);setUser(response.data.data);toast.success('Profile updated successfully');return{success:true};}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Profile update failed';toast.error(message);return{success:false,error:message};}};const updatePassword=async(currentPassword,newPassword)=>{try{await api.put('/api/v1/auth/updatepassword',{currentPassword,newPassword});toast.success('Password updated successfully');return{success:true};}catch(error){var _error$response5,_error$response5$data;const message=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||'Password update failed';toast.error(message);return{success:false,error:message};}};const value={user,token,loading,login,register,logout,updateProfile,updatePassword,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","initializeAuth","requestInterceptor","interceptors","request","use","config","headers","Authorization","concat","error","Promise","reject","responseInterceptor","response","_error$response","status","logout","eject","storedToken","get","data","console","removeItem","login","email","password","post","newToken","userData","setItem","success","_error$response2","_error$response2$data","message","register","newUser","_error$response3","_error$response3$data","updateProfile","updates","put","_error$response4","_error$response4$data","updatePassword","currentPassword","newPassword","_error$response5","_error$response5$data","value","isAuthenticated","Provider"],"sources":["/workspace/client/src/context/AuthContext.js"],"sourcesContent":["/**\n * Authentication Context\n * Manages user authentication state and API calls\n */\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Initialize authentication on mount\n  useEffect(() => {\n    initializeAuth();\n  }, []);\n\n  // Set up axios interceptors for authentication\n  useEffect(() => {\n    // Request interceptor\n    const requestInterceptor = api.interceptors.request.use(\n      (config) => {\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    // Response interceptor\n    const responseInterceptor = api.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          // Token expired or invalid\n          logout();\n          toast.error('Session expired. Please login again.');\n        }\n        return Promise.reject(error);\n      }\n    );\n\n    return () => {\n      api.interceptors.request.eject(requestInterceptor);\n      api.interceptors.response.eject(responseInterceptor);\n    };\n  }, [token]);\n\n  const initializeAuth = async () => {\n    try {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        setToken(storedToken);\n        // Verify token with server\n        const response = await api.get('/api/v1/auth/me');\n        setUser(response.data.data);\n      }\n    } catch (error) {\n      console.error('Auth initialization failed:', error);\n      localStorage.removeItem('token');\n      setToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/v1/auth/login', { email, password });\n\n      const { token: newToken, user: userData } = response.data.data;\n\n      setToken(newToken);\n      setUser(userData);\n      localStorage.setItem('token', newToken);\n\n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/v1/auth/register', userData);\n\n      const { token: newToken, user: newUser } = response.data.data;\n\n      setToken(newToken);\n      setUser(newUser);\n      localStorage.setItem('token', newToken);\n\n      toast.success('Registration successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Registration failed';\n      toast.error(message);\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    toast.success('Logged out successfully');\n  };\n\n  const updateProfile = async (updates) => {\n    try {\n      const response = await api.put('/api/v1/auth/me', updates);\n      setUser(response.data.data);\n      toast.success('Profile updated successfully');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Profile update failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const updatePassword = async (currentPassword, newPassword) => {\n    try {\n      await api.put('/api/v1/auth/updatepassword', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password updated successfully');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Password update failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    updatePassword,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"AAAA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,GAAG,KAAM,cAAc,CAC9B,MAAO,CAAAC,KAAK,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpC,KAAM,CAAAC,WAAW,cAAGR,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAS,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGT,UAAU,CAACO,WAAW,CAAC,CACvC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAACmB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAEjE;AACAnB,SAAS,CAAC,IAAM,CACdoB,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN;AACApB,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAqB,kBAAkB,CAAGpB,GAAG,CAACqB,YAAY,CAACC,OAAO,CAACC,GAAG,CACpDC,MAAM,EAAK,CACV,GAAIT,KAAK,CAAE,CACTS,MAAM,CAACC,OAAO,CAACC,aAAa,WAAAC,MAAA,CAAaZ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAS,MAAM,CACf,CAAC,CACAI,KAAK,EAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC,CAED;AACA,KAAM,CAAAG,mBAAmB,CAAG/B,GAAG,CAACqB,YAAY,CAACW,QAAQ,CAACT,GAAG,CACtDS,QAAQ,EAAKA,QAAQ,CACrBJ,KAAK,EAAK,KAAAK,eAAA,CACT,GAAI,EAAAA,eAAA,CAAAL,KAAK,CAACI,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAClC;AACAC,MAAM,CAAC,CAAC,CACRlC,KAAK,CAAC2B,KAAK,CAAC,sCAAsC,CAAC,CACrD,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,MAAO,IAAM,CACX5B,GAAG,CAACqB,YAAY,CAACC,OAAO,CAACc,KAAK,CAAChB,kBAAkB,CAAC,CAClDpB,GAAG,CAACqB,YAAY,CAACW,QAAQ,CAACI,KAAK,CAACL,mBAAmB,CAAC,CACtD,CAAC,CACH,CAAC,CAAE,CAAChB,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAI,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAkB,WAAW,CAAGpB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACjD,GAAImB,WAAW,CAAE,CACfrB,QAAQ,CAACqB,WAAW,CAAC,CACrB;AACA,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAhC,GAAG,CAACsC,GAAG,CAAC,iBAAiB,CAAC,CACjD1B,OAAO,CAACoB,QAAQ,CAACO,IAAI,CAACA,IAAI,CAAC,CAC7B,CACF,CAAE,MAAOX,KAAK,CAAE,CACdY,OAAO,CAACZ,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDX,YAAY,CAACwB,UAAU,CAAC,OAAO,CAAC,CAChCzB,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAA4B,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACvC,GAAI,CACF9B,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAkB,QAAQ,CAAG,KAAM,CAAAhC,GAAG,CAAC6C,IAAI,CAAC,oBAAoB,CAAE,CAAEF,KAAK,CAAEC,QAAS,CAAC,CAAC,CAE1E,KAAM,CAAE7B,KAAK,CAAE+B,QAAQ,CAAEnC,IAAI,CAAEoC,QAAS,CAAC,CAAGf,QAAQ,CAACO,IAAI,CAACA,IAAI,CAE9DvB,QAAQ,CAAC8B,QAAQ,CAAC,CAClBlC,OAAO,CAACmC,QAAQ,CAAC,CACjB9B,YAAY,CAAC+B,OAAO,CAAC,OAAO,CAAEF,QAAQ,CAAC,CAEvC7C,KAAK,CAACgD,OAAO,CAAC,mBAAmB,CAAC,CAClC,MAAO,CAAEA,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOrB,KAAK,CAAE,KAAAsB,gBAAA,CAAAC,qBAAA,CACd,KAAM,CAAAC,OAAO,CAAG,EAAAF,gBAAA,CAAAtB,KAAK,CAACI,QAAQ,UAAAkB,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBX,IAAI,UAAAY,qBAAA,iBAApBA,qBAAA,CAAsBvB,KAAK,GAAI,cAAc,CAC7D3B,KAAK,CAAC2B,KAAK,CAACwB,OAAO,CAAC,CACpB,MAAO,CAAEH,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAEwB,OAAQ,CAAC,CAC3C,CAAC,OAAS,CACRtC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAuC,QAAQ,CAAG,KAAO,CAAAN,QAAQ,EAAK,CACnC,GAAI,CACFjC,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAkB,QAAQ,CAAG,KAAM,CAAAhC,GAAG,CAAC6C,IAAI,CAAC,uBAAuB,CAAEE,QAAQ,CAAC,CAElE,KAAM,CAAEhC,KAAK,CAAE+B,QAAQ,CAAEnC,IAAI,CAAE2C,OAAQ,CAAC,CAAGtB,QAAQ,CAACO,IAAI,CAACA,IAAI,CAE7DvB,QAAQ,CAAC8B,QAAQ,CAAC,CAClBlC,OAAO,CAAC0C,OAAO,CAAC,CAChBrC,YAAY,CAAC+B,OAAO,CAAC,OAAO,CAAEF,QAAQ,CAAC,CAEvC7C,KAAK,CAACgD,OAAO,CAAC,0BAA0B,CAAC,CACzC,MAAO,CAAEA,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOrB,KAAK,CAAE,KAAA2B,gBAAA,CAAAC,qBAAA,CACd,KAAM,CAAAJ,OAAO,CAAG,EAAAG,gBAAA,CAAA3B,KAAK,CAACI,QAAQ,UAAAuB,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBhB,IAAI,UAAAiB,qBAAA,iBAApBA,qBAAA,CAAsB5B,KAAK,GAAI,qBAAqB,CACpE3B,KAAK,CAAC2B,KAAK,CAACwB,OAAO,CAAC,CACpB,MAAO,CAAEH,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAEwB,OAAQ,CAAC,CAC3C,CAAC,OAAS,CACRtC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAqB,MAAM,CAAGA,CAAA,GAAM,CACnBvB,OAAO,CAAC,IAAI,CAAC,CACbI,QAAQ,CAAC,IAAI,CAAC,CACdC,YAAY,CAACwB,UAAU,CAAC,OAAO,CAAC,CAChCxC,KAAK,CAACgD,OAAO,CAAC,yBAAyB,CAAC,CAC1C,CAAC,CAED,KAAM,CAAAQ,aAAa,CAAG,KAAO,CAAAC,OAAO,EAAK,CACvC,GAAI,CACF,KAAM,CAAA1B,QAAQ,CAAG,KAAM,CAAAhC,GAAG,CAAC2D,GAAG,CAAC,iBAAiB,CAAED,OAAO,CAAC,CAC1D9C,OAAO,CAACoB,QAAQ,CAACO,IAAI,CAACA,IAAI,CAAC,CAC3BtC,KAAK,CAACgD,OAAO,CAAC,8BAA8B,CAAC,CAC7C,MAAO,CAAEA,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOrB,KAAK,CAAE,KAAAgC,gBAAA,CAAAC,qBAAA,CACd,KAAM,CAAAT,OAAO,CAAG,EAAAQ,gBAAA,CAAAhC,KAAK,CAACI,QAAQ,UAAA4B,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBrB,IAAI,UAAAsB,qBAAA,iBAApBA,qBAAA,CAAsBjC,KAAK,GAAI,uBAAuB,CACtE3B,KAAK,CAAC2B,KAAK,CAACwB,OAAO,CAAC,CACpB,MAAO,CAAEH,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAEwB,OAAQ,CAAC,CAC3C,CACF,CAAC,CAED,KAAM,CAAAU,cAAc,CAAG,KAAAA,CAAOC,eAAe,CAAEC,WAAW,GAAK,CAC7D,GAAI,CACF,KAAM,CAAAhE,GAAG,CAAC2D,GAAG,CAAC,6BAA6B,CAAE,CAC3CI,eAAe,CACfC,WACF,CAAC,CAAC,CACF/D,KAAK,CAACgD,OAAO,CAAC,+BAA+B,CAAC,CAC9C,MAAO,CAAEA,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOrB,KAAK,CAAE,KAAAqC,gBAAA,CAAAC,qBAAA,CACd,KAAM,CAAAd,OAAO,CAAG,EAAAa,gBAAA,CAAArC,KAAK,CAACI,QAAQ,UAAAiC,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgB1B,IAAI,UAAA2B,qBAAA,iBAApBA,qBAAA,CAAsBtC,KAAK,GAAI,wBAAwB,CACvE3B,KAAK,CAAC2B,KAAK,CAACwB,OAAO,CAAC,CACpB,MAAO,CAAEH,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAEwB,OAAQ,CAAC,CAC3C,CACF,CAAC,CAED,KAAM,CAAAe,KAAK,CAAG,CACZxD,IAAI,CACJI,KAAK,CACLF,OAAO,CACP6B,KAAK,CACLW,QAAQ,CACRlB,MAAM,CACNsB,aAAa,CACbK,cAAc,CACdM,eAAe,CAAE,CAAC,CAACzD,IACrB,CAAC,CAED,mBACER,IAAA,CAACC,WAAW,CAACiE,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAzD,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}