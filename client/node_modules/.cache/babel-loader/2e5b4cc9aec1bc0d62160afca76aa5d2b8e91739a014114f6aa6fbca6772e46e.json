{"ast":null,"code":"/**\r\n * API Configuration and Utilities\r\n * Axios instance with interceptors for authentication and error handling\r\n */\n\nimport axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api/v1',\n  timeout: 30000,\n  // 30 seconds\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for authentication\napi.interceptors.request.use(config => {\n  var _config$method;\n  // Add auth token if available\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Add request ID for tracking\n  config.metadata = {\n    requestId: Date.now() + Math.random(),\n    startTime: Date.now()\n  };\n  console.log(`🚀 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`, {\n    requestId: config.metadata.requestId,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('❌ Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  const duration = Date.now() - response.config.metadata.startTime;\n  console.log(`✅ API Response: ${response.status} ${response.config.url}`, {\n    requestId: response.config.metadata.requestId,\n    duration: `${duration}ms`,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$config, _error$config$metadat, _error$config2, _error$config3, _error$config3$method, _error$response, _error$response2, _error$response2$data, _error$config4, _error$config4$metada, _error$response3, _error$response4, _error$response5;\n  const duration = (_error$config = error.config) !== null && _error$config !== void 0 && (_error$config$metadat = _error$config.metadata) !== null && _error$config$metadat !== void 0 && _error$config$metadat.startTime ? Date.now() - error.config.metadata.startTime : 'unknown';\n  console.error('❌ API Error:', {\n    url: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.url,\n    method: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : (_error$config3$method = _error$config3.method) === null || _error$config3$method === void 0 ? void 0 : _error$config3$method.toUpperCase(),\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    duration: `${duration}ms`,\n    message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message,\n    requestId: (_error$config4 = error.config) === null || _error$config4 === void 0 ? void 0 : (_error$config4$metada = _error$config4.metadata) === null || _error$config4$metada === void 0 ? void 0 : _error$config4$metada.requestId\n  });\n\n  // Handle specific error types\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    // Token expired - clear local storage\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 403) {\n    // Forbidden - user doesn't have permission\n    console.warn('Access forbidden:', error.response.data.error);\n  }\n  if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) >= 500) {\n    // Server error - could implement retry logic here\n    console.error('Server error:', error.response.data);\n  }\n  return Promise.reject(error);\n});\n\n// API helper functions\nexport const apiHelpers = {\n  // Generic GET request\n  get: (url, params = {}) => api.get(url, {\n    params\n  }),\n  // Generic POST request\n  post: (url, data = {}) => api.post(url, data),\n  // Generic PUT request\n  put: (url, data = {}) => api.put(url, data),\n  // Generic DELETE request\n  delete: url => api.delete(url),\n  // File upload helper\n  uploadFile: (url, file, onProgress = null) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post(url, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      onUploadProgress: onProgress\n    });\n  },\n  // Batch requests helper\n  batch: requests => {\n    const promises = requests.map(request => {\n      const {\n        method,\n        url,\n        data,\n        params\n      } = request;\n      return api[method.toLowerCase()](url, method === 'GET' ? {\n        params\n      } : data);\n    });\n    return Promise.allSettled(promises);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","_config$method","token","localStorage","getItem","Authorization","metadata","requestId","Date","now","Math","random","startTime","console","log","method","toUpperCase","url","data","error","Promise","reject","response","duration","status","_error$config","_error$config$metadat","_error$config2","_error$config3","_error$config3$method","_error$response","_error$response2","_error$response2$data","_error$config4","_error$config4$metada","_error$response3","_error$response4","_error$response5","message","removeItem","window","location","href","warn","apiHelpers","get","params","post","put","delete","uploadFile","file","onProgress","formData","FormData","append","onUploadProgress","batch","requests","promises","map","toLowerCase","allSettled"],"sources":["C:/Users/DELL/Documents/CascadeProjects/embedded/client/src/utils/api.js"],"sourcesContent":["/**\r\n * API Configuration and Utilities\r\n * Axios instance with interceptors for authentication and error handling\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api/v1',\r\n  timeout: 30000, // 30 seconds\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor for authentication\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Add auth token if available\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    // Add request ID for tracking\r\n    config.metadata = {\r\n      requestId: Date.now() + Math.random(),\r\n      startTime: Date.now()\r\n    };\r\n\r\n    console.log(`🚀 API Request: ${config.method?.toUpperCase()} ${config.url}`, {\r\n      requestId: config.metadata.requestId,\r\n      data: config.data\r\n    });\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('❌ Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    const duration = Date.now() - response.config.metadata.startTime;\r\n\r\n    console.log(`✅ API Response: ${response.status} ${response.config.url}`, {\r\n      requestId: response.config.metadata.requestId,\r\n      duration: `${duration}ms`,\r\n      data: response.data\r\n    });\r\n\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const duration = error.config?.metadata?.startTime\r\n      ? Date.now() - error.config.metadata.startTime\r\n      : 'unknown';\r\n\r\n    console.error('❌ API Error:', {\r\n      url: error.config?.url,\r\n      method: error.config?.method?.toUpperCase(),\r\n      status: error.response?.status,\r\n      duration: `${duration}ms`,\r\n      message: error.response?.data?.error || error.message,\r\n      requestId: error.config?.metadata?.requestId\r\n    });\r\n\r\n    // Handle specific error types\r\n    if (error.response?.status === 401) {\r\n      // Token expired - clear local storage\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n\r\n    if (error.response?.status === 403) {\r\n      // Forbidden - user doesn't have permission\r\n      console.warn('Access forbidden:', error.response.data.error);\r\n    }\r\n\r\n    if (error.response?.status >= 500) {\r\n      // Server error - could implement retry logic here\r\n      console.error('Server error:', error.response.data);\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API helper functions\r\nexport const apiHelpers = {\r\n  // Generic GET request\r\n  get: (url, params = {}) => api.get(url, { params }),\r\n\r\n  // Generic POST request\r\n  post: (url, data = {}) => api.post(url, data),\r\n\r\n  // Generic PUT request\r\n  put: (url, data = {}) => api.put(url, data),\r\n\r\n  // Generic DELETE request\r\n  delete: (url) => api.delete(url),\r\n\r\n  // File upload helper\r\n  uploadFile: (url, file, onProgress = null) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    return api.post(url, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      onUploadProgress: onProgress\r\n    });\r\n  },\r\n\r\n  // Batch requests helper\r\n  batch: (requests) => {\r\n    const promises = requests.map(request => {\r\n      const { method, url, data, params } = request;\r\n      return api[method.toLowerCase()](url, method === 'GET' ? { params } : data);\r\n    });\r\n\r\n    return Promise.allSettled(promises);\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,8BAA8B;EACxEC,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACV;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTF,MAAM,CAACJ,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;;EAEA;EACAF,MAAM,CAACM,QAAQ,GAAG;IAChBC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;IACrCC,SAAS,EAAEJ,IAAI,CAACC,GAAG,CAAC;EACtB,CAAC;EAEDI,OAAO,CAACC,GAAG,CAAC,oBAAAb,cAAA,GAAmBD,MAAM,CAACe,MAAM,cAAAd,cAAA,uBAAbA,cAAA,CAAee,WAAW,CAAC,CAAC,IAAIhB,MAAM,CAACiB,GAAG,EAAE,EAAE;IAC3EV,SAAS,EAAEP,MAAM,CAACM,QAAQ,CAACC,SAAS;IACpCW,IAAI,EAAElB,MAAM,CAACkB;EACf,CAAC,CAAC;EAEF,OAAOlB,MAAM;AACf,CAAC,EACAmB,KAAK,IAAK;EACTN,OAAO,CAACM,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EACxC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA9B,GAAG,CAACQ,YAAY,CAACyB,QAAQ,CAACvB,GAAG,CAC1BuB,QAAQ,IAAK;EACZ,MAAMC,QAAQ,GAAGf,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGa,QAAQ,CAACtB,MAAM,CAACM,QAAQ,CAACM,SAAS;EAEhEC,OAAO,CAACC,GAAG,CAAC,mBAAmBQ,QAAQ,CAACE,MAAM,IAAIF,QAAQ,CAACtB,MAAM,CAACiB,GAAG,EAAE,EAAE;IACvEV,SAAS,EAAEe,QAAQ,CAACtB,MAAM,CAACM,QAAQ,CAACC,SAAS;IAC7CgB,QAAQ,EAAE,GAAGA,QAAQ,IAAI;IACzBL,IAAI,EAAEI,QAAQ,CAACJ;EACjB,CAAC,CAAC;EAEF,OAAOI,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAM,aAAA,EAAAC,qBAAA,EAAAC,cAAA,EAAAC,cAAA,EAAAC,qBAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,cAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACT,MAAMd,QAAQ,GAAG,CAAAE,aAAA,GAAAN,KAAK,CAACnB,MAAM,cAAAyB,aAAA,gBAAAC,qBAAA,GAAZD,aAAA,CAAcnB,QAAQ,cAAAoB,qBAAA,eAAtBA,qBAAA,CAAwBd,SAAS,GAC9CJ,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGU,KAAK,CAACnB,MAAM,CAACM,QAAQ,CAACM,SAAS,GAC5C,SAAS;EAEbC,OAAO,CAACM,KAAK,CAAC,cAAc,EAAE;IAC5BF,GAAG,GAAAU,cAAA,GAAER,KAAK,CAACnB,MAAM,cAAA2B,cAAA,uBAAZA,cAAA,CAAcV,GAAG;IACtBF,MAAM,GAAAa,cAAA,GAAET,KAAK,CAACnB,MAAM,cAAA4B,cAAA,wBAAAC,qBAAA,GAAZD,cAAA,CAAcb,MAAM,cAAAc,qBAAA,uBAApBA,qBAAA,CAAsBb,WAAW,CAAC,CAAC;IAC3CQ,MAAM,GAAAM,eAAA,GAAEX,KAAK,CAACG,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBN,MAAM;IAC9BD,QAAQ,EAAE,GAAGA,QAAQ,IAAI;IACzBe,OAAO,EAAE,EAAAP,gBAAA,GAAAZ,KAAK,CAACG,QAAQ,cAAAS,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBb,IAAI,cAAAc,qBAAA,uBAApBA,qBAAA,CAAsBb,KAAK,KAAIA,KAAK,CAACmB,OAAO;IACrD/B,SAAS,GAAA0B,cAAA,GAAEd,KAAK,CAACnB,MAAM,cAAAiC,cAAA,wBAAAC,qBAAA,GAAZD,cAAA,CAAc3B,QAAQ,cAAA4B,qBAAA,uBAAtBA,qBAAA,CAAwB3B;EACrC,CAAC,CAAC;;EAEF;EACA,IAAI,EAAA4B,gBAAA,GAAAhB,KAAK,CAACG,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBX,MAAM,MAAK,GAAG,EAAE;IAClC;IACArB,YAAY,CAACoC,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EAEA,IAAI,EAAAN,gBAAA,GAAAjB,KAAK,CAACG,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBZ,MAAM,MAAK,GAAG,EAAE;IAClC;IACAX,OAAO,CAAC8B,IAAI,CAAC,mBAAmB,EAAExB,KAAK,CAACG,QAAQ,CAACJ,IAAI,CAACC,KAAK,CAAC;EAC9D;EAEA,IAAI,EAAAkB,gBAAA,GAAAlB,KAAK,CAACG,QAAQ,cAAAe,gBAAA,uBAAdA,gBAAA,CAAgBb,MAAM,KAAI,GAAG,EAAE;IACjC;IACAX,OAAO,CAACM,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACG,QAAQ,CAACJ,IAAI,CAAC;EACrD;EAEA,OAAOE,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMyB,UAAU,GAAG;EACxB;EACAC,GAAG,EAAEA,CAAC5B,GAAG,EAAE6B,MAAM,GAAG,CAAC,CAAC,KAAKzD,GAAG,CAACwD,GAAG,CAAC5B,GAAG,EAAE;IAAE6B;EAAO,CAAC,CAAC;EAEnD;EACAC,IAAI,EAAEA,CAAC9B,GAAG,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK7B,GAAG,CAAC0D,IAAI,CAAC9B,GAAG,EAAEC,IAAI,CAAC;EAE7C;EACA8B,GAAG,EAAEA,CAAC/B,GAAG,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK7B,GAAG,CAAC2D,GAAG,CAAC/B,GAAG,EAAEC,IAAI,CAAC;EAE3C;EACA+B,MAAM,EAAGhC,GAAG,IAAK5B,GAAG,CAAC4D,MAAM,CAAChC,GAAG,CAAC;EAEhC;EACAiC,UAAU,EAAEA,CAACjC,GAAG,EAAEkC,IAAI,EAAEC,UAAU,GAAG,IAAI,KAAK;IAC5C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;IAE7B,OAAO9D,GAAG,CAAC0D,IAAI,CAAC9B,GAAG,EAAEoC,QAAQ,EAAE;MAC7BzD,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACD4D,gBAAgB,EAAEJ;IACpB,CAAC,CAAC;EACJ,CAAC;EAED;EACAK,KAAK,EAAGC,QAAQ,IAAK;IACnB,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,GAAG,CAAC9D,OAAO,IAAI;MACvC,MAAM;QAAEiB,MAAM;QAAEE,GAAG;QAAEC,IAAI;QAAE4B;MAAO,CAAC,GAAGhD,OAAO;MAC7C,OAAOT,GAAG,CAAC0B,MAAM,CAAC8C,WAAW,CAAC,CAAC,CAAC,CAAC5C,GAAG,EAAEF,MAAM,KAAK,KAAK,GAAG;QAAE+B;MAAO,CAAC,GAAG5B,IAAI,CAAC;IAC7E,CAAC,CAAC;IAEF,OAAOE,OAAO,CAAC0C,UAAU,CAACH,QAAQ,CAAC;EACrC;AACF,CAAC;AAED,eAAetE,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}