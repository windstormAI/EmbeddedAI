{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\CascadeProjects\\\\embedded\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/**\r\n * Authentication Context\r\n * Manages user authentication state and API calls\r\n */\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Initialize authentication on mount\n  useEffect(() => {\n    initializeAuth();\n  }, []);\n\n  // Set up axios interceptors for authentication\n  useEffect(() => {\n    // Request interceptor\n    const requestInterceptor = api.interceptors.request.use(config => {\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n\n    // Response interceptor\n    const responseInterceptor = api.interceptors.response.use(response => response, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        // Token expired or invalid\n        logout();\n        toast.error('Session expired. Please login again.');\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      api.interceptors.request.eject(requestInterceptor);\n      api.interceptors.response.eject(responseInterceptor);\n    };\n  }, [token]);\n  const initializeAuth = async () => {\n    try {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        setToken(storedToken);\n        // Verify token with server\n        const response = await api.get('/api/v1/auth/me');\n        setUser(response.data.data);\n      }\n    } catch (error) {\n      console.error('Auth initialization failed:', error);\n      localStorage.removeItem('token');\n      setToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/v1/auth/login', {\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data.data;\n      setToken(newToken);\n      setUser(userData);\n      localStorage.setItem('token', newToken);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/v1/auth/register', userData);\n      const {\n        token: newToken,\n        user: newUser\n      } = response.data.data;\n      setToken(newToken);\n      setUser(newUser);\n      localStorage.setItem('token', newToken);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async updates => {\n    try {\n      const response = await api.put('/api/v1/auth/me', updates);\n      setUser(response.data.data);\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const updatePassword = async (currentPassword, newPassword) => {\n    try {\n      await api.put('/api/v1/auth/updatepassword', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Password update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    updatePassword,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"V8bE6DZSV5/nB2UMC4Uofie15PA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","initializeAuth","requestInterceptor","interceptors","request","use","config","headers","Authorization","error","Promise","reject","responseInterceptor","response","_error$response","status","logout","eject","storedToken","get","data","console","removeItem","login","email","password","post","newToken","userData","setItem","success","_error$response2","_error$response2$data","message","register","newUser","_error$response3","_error$response3$data","updateProfile","updates","put","_error$response4","_error$response4$data","updatePassword","currentPassword","newPassword","_error$response5","_error$response5$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/CascadeProjects/embedded/client/src/context/AuthContext.js"],"sourcesContent":["/**\r\n * Authentication Context\r\n * Manages user authentication state and API calls\r\n */\r\n\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  // Initialize authentication on mount\r\n  useEffect(() => {\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  // Set up axios interceptors for authentication\r\n  useEffect(() => {\r\n    // Request interceptor\r\n    const requestInterceptor = api.interceptors.request.use(\r\n      (config) => {\r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      (error) => Promise.reject(error)\r\n    );\r\n\r\n    // Response interceptor\r\n    const responseInterceptor = api.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        if (error.response?.status === 401) {\r\n          // Token expired or invalid\r\n          logout();\r\n          toast.error('Session expired. Please login again.');\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      api.interceptors.request.eject(requestInterceptor);\r\n      api.interceptors.response.eject(responseInterceptor);\r\n    };\r\n  }, [token]);\r\n\r\n  const initializeAuth = async () => {\r\n    try {\r\n      const storedToken = localStorage.getItem('token');\r\n      if (storedToken) {\r\n        setToken(storedToken);\r\n        // Verify token with server\r\n        const response = await api.get('/api/v1/auth/me');\r\n        setUser(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth initialization failed:', error);\r\n      localStorage.removeItem('token');\r\n      setToken(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post('/api/v1/auth/login', { email, password });\r\n\r\n      const { token: newToken, user: userData } = response.data.data;\r\n\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      localStorage.setItem('token', newToken);\r\n\r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post('/api/v1/auth/register', userData);\r\n\r\n      const { token: newToken, user: newUser } = response.data.data;\r\n\r\n      setToken(newToken);\r\n      setUser(newUser);\r\n      localStorage.setItem('token', newToken);\r\n\r\n      toast.success('Registration successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (updates) => {\r\n    try {\r\n      const response = await api.put('/api/v1/auth/me', updates);\r\n      setUser(response.data.data);\r\n      toast.success('Profile updated successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const updatePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await api.put('/api/v1/auth/updatepassword', {\r\n        currentPassword,\r\n        newPassword\r\n      });\r\n      toast.success('Password updated successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Password update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    updatePassword,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}