{"ast":null,"code":"import _objectSpread from\"/workspace/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * Progressive Web App utilities\n * Handles service worker registration, offline detection, and PWA features\n */import React from'react';class PWAUtils{constructor(){this.deferredPrompt=null;this.isOnline=navigator.onLine;this.serviceWorker=null;this.registration=null;this.init();}init(){this.registerServiceWorker();this.setupNetworkListeners();this.setupInstallPrompt();this.setupVisibilityChange();}// Service Worker Registration\nasync registerServiceWorker(){if('serviceWorker'in navigator){try{this.registration=await navigator.serviceWorker.register('/sw.js',{scope:'/'});console.log('[PWA] Service Worker registered:',this.registration.scope);// Handle updates\nthis.registration.addEventListener('updatefound',()=>{const newWorker=this.registration.installing;if(newWorker){newWorker.addEventListener('statechange',()=>{if(newWorker.state==='installed'&&navigator.serviceWorker.controller){this.showUpdateNotification();}});}});// Listen for messages from service worker\nnavigator.serviceWorker.addEventListener('message',event=>{this.handleServiceWorkerMessage(event);});return this.registration;}catch(error){console.error('[PWA] Service Worker registration failed:',error);return null;}}else{console.warn('[PWA] Service Workers not supported');return null;}}// Network status monitoring\nsetupNetworkListeners(){window.addEventListener('online',()=>{this.isOnline=true;this.handleNetworkChange(true);});window.addEventListener('offline',()=>{this.isOnline=false;this.handleNetworkChange(false);});}handleNetworkChange(isOnline){// Dispatch custom event for React components\nconst event=new CustomEvent('networkChange',{detail:{isOnline}});window.dispatchEvent(event);// Show notification\nif(isOnline){this.showNotification('Back online! Syncing your changes...','success');this.syncOfflineData();}else{this.showNotification('You\\'re offline. Changes will sync when back online.','warning');}}// Install prompt handling\nsetupInstallPrompt(){window.addEventListener('beforeinstallprompt',event=>{event.preventDefault();this.deferredPrompt=event;// Show install button\nthis.showInstallPrompt();});window.addEventListener('appinstalled',()=>{console.log('[PWA] App installed successfully');this.hideInstallPrompt();this.trackEvent('app_installed');});}showInstallPrompt(){const event=new CustomEvent('showInstallPrompt',{detail:{prompt:this.deferredPrompt}});window.dispatchEvent(event);}hideInstallPrompt(){const event=new CustomEvent('hideInstallPrompt');window.dispatchEvent(event);}async installApp(){if(!this.deferredPrompt)return false;try{this.deferredPrompt.prompt();const{outcome}=await this.deferredPrompt.userChoice;if(outcome==='accepted'){console.log('[PWA] User accepted install prompt');this.trackEvent('install_prompt_accepted');}else{console.log('[PWA] User dismissed install prompt');this.trackEvent('install_prompt_dismissed');}this.deferredPrompt=null;return outcome==='accepted';}catch(error){console.error('[PWA] Install prompt failed:',error);return false;}}// Visibility change handling\nsetupVisibilityChange(){document.addEventListener('visibilitychange',()=>{if(document.hidden){this.handleAppHidden();}else{this.handleAppVisible();}});}handleAppHidden(){// Save any pending changes\nthis.savePendingChanges();}handleAppVisible(){// Sync data and refresh if needed\nif(this.isOnline){this.syncOfflineData();}}// Offline data management\nasync savePendingChanges(){try{const pendingData=this.getPendingChanges();if(pendingData&&pendingData.length>0){localStorage.setItem('pendingChanges',JSON.stringify(pendingData));console.log('[PWA] Pending changes saved');}}catch(error){console.error('[PWA] Failed to save pending changes:',error);}}async syncOfflineData(){try{const pendingChanges=localStorage.getItem('pendingChanges');if(pendingChanges){const changes=JSON.parse(pendingChanges);// Sync each change\nfor(const change of changes){await this.syncChange(change);}// Clear pending changes\nlocalStorage.removeItem('pendingChanges');console.log('[PWA] Offline data synced successfully');this.showNotification('All changes synced successfully!','success');}}catch(error){console.error('[PWA] Failed to sync offline data:',error);this.showNotification('Failed to sync some changes. Please try again.','error');}}async syncChange(change){// Implement sync logic based on change type\nswitch(change.type){case'project':return this.syncProjectChange(change);case'circuit':return this.syncCircuitChange(change);case'code':return this.syncCodeChange(change);default:console.warn('[PWA] Unknown change type:',change.type);}}// Background sync registration\nasync registerBackgroundSync(tag){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if('serviceWorker'in navigator&&'sync'in window.ServiceWorkerRegistration.prototype){try{await this.registration.sync.register(tag,{data:data});console.log(\"[PWA] Background sync registered: \".concat(tag));}catch(error){console.error(\"[PWA] Background sync registration failed: \".concat(tag),error);}}}// Push notifications\nasync requestNotificationPermission(){if('Notification'in window){const permission=await Notification.requestPermission();return permission==='granted';}return false;}async showNotification(title,body){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if('Notification'in window&&Notification.permission==='granted'){const notificationOptions=_objectSpread({icon:'/icons/icon-192x192.png',badge:'/icons/icon-72x72.png',vibrate:[100,50,100]},options);if(this.registration){this.registration.showNotification(title,_objectSpread({body},notificationOptions));}else{new Notification(title,_objectSpread({body},notificationOptions));}}}// Service worker message handling\nhandleServiceWorkerMessage(event){const{type,data}=event.data;switch(type){case'SYNC_COMPLETE':this.showNotification('Sync complete!','Your offline changes have been saved.','success');break;case'CACHE_UPDATED':this.showNotification('App updated','A new version is available. Refresh to update.','info');break;case'OFFLINE_READY':this.showNotification('Offline ready','You can now work offline!','success');break;default:console.log('[PWA] Service worker message:',type,data);}}// Update handling\nshowUpdateNotification(){const event=new CustomEvent('appUpdateAvailable');window.dispatchEvent(event);}async updateApp(){if(this.registration&&this.registration.waiting){this.registration.waiting.postMessage({type:'SKIP_WAITING'});window.location.reload();}}// Analytics and tracking\ntrackEvent(eventName){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// Send to analytics service\nif(window.gtag){window.gtag('event',eventName,data);}// Log for debugging\nconsole.log('[PWA] Event tracked:',eventName,data);}// Utility methods\ngetPendingChanges(){// Get pending changes from various sources\nconst changes=[];// Add logic to collect pending changes from different parts of the app\n// This would be implemented based on the specific data structures used\nreturn changes;}isInstalled(){return window.matchMedia('(display-mode: standalone)').matches||window.navigator.standalone===true;}getNetworkStatus(){var _navigator$connection,_navigator$connection2,_navigator$connection3;return{isOnline:this.isOnline,connectionType:((_navigator$connection=navigator.connection)===null||_navigator$connection===void 0?void 0:_navigator$connection.effectiveType)||'unknown',downlink:((_navigator$connection2=navigator.connection)===null||_navigator$connection2===void 0?void 0:_navigator$connection2.downlink)||0,rtt:((_navigator$connection3=navigator.connection)===null||_navigator$connection3===void 0?void 0:_navigator$connection3.rtt)||0};}// Storage management\nasync getStorageEstimate(){if('storage'in navigator&&'estimate'in navigator.storage){try{const estimate=await navigator.storage.estimate();return{quota:estimate.quota,usage:estimate.usage,usageDetails:estimate.usageDetails};}catch(error){console.error('[PWA] Storage estimate failed:',error);}}return null;}// Cleanup\ncleanup(){// Remove event listeners\nwindow.removeEventListener('online',this.handleNetworkChange);window.removeEventListener('offline',this.handleNetworkChange);document.removeEventListener('visibilitychange',this.handleVisibilityChange);}}// Create singleton instance\nconst pwaUtils=new PWAUtils();// Export for use in React components\nexport default pwaUtils;// React hook for PWA functionality\nexport const usePWA=()=>{const[isOnline,setIsOnline]=React.useState(navigator.onLine);const[isInstalled,setIsInstalled]=React.useState(pwaUtils.isInstalled());const[showInstallPrompt,setShowInstallPrompt]=React.useState(false);const[updateAvailable,setUpdateAvailable]=React.useState(false);React.useEffect(()=>{const handleNetworkChange=event=>{setIsOnline(event.detail.isOnline);};const handleInstallPrompt=()=>{setShowInstallPrompt(true);};const handleHideInstallPrompt=()=>{setShowInstallPrompt(false);};const handleUpdateAvailable=()=>{setUpdateAvailable(true);};window.addEventListener('networkChange',handleNetworkChange);window.addEventListener('showInstallPrompt',handleInstallPrompt);window.addEventListener('hideInstallPrompt',handleHideInstallPrompt);window.addEventListener('appUpdateAvailable',handleUpdateAvailable);return()=>{window.removeEventListener('networkChange',handleNetworkChange);window.removeEventListener('showInstallPrompt',handleInstallPrompt);window.removeEventListener('hideInstallPrompt',handleHideInstallPrompt);window.removeEventListener('appUpdateAvailable',handleUpdateAvailable);};},[]);return{isOnline,isInstalled,showInstallPrompt,updateAvailable,installApp:()=>pwaUtils.installApp(),updateApp:()=>pwaUtils.updateApp(),networkStatus:pwaUtils.getNetworkStatus(),storageEstimate:pwaUtils.getStorageEstimate()};};","map":{"version":3,"names":["React","PWAUtils","constructor","deferredPrompt","isOnline","navigator","onLine","serviceWorker","registration","init","registerServiceWorker","setupNetworkListeners","setupInstallPrompt","setupVisibilityChange","register","scope","console","log","addEventListener","newWorker","installing","state","controller","showUpdateNotification","event","handleServiceWorkerMessage","error","warn","window","handleNetworkChange","CustomEvent","detail","dispatchEvent","showNotification","syncOfflineData","preventDefault","showInstallPrompt","hideInstallPrompt","trackEvent","prompt","installApp","outcome","userChoice","document","hidden","handleAppHidden","handleAppVisible","savePendingChanges","pendingData","getPendingChanges","length","localStorage","setItem","JSON","stringify","pendingChanges","getItem","changes","parse","change","syncChange","removeItem","type","syncProjectChange","syncCircuitChange","syncCodeChange","registerBackgroundSync","tag","data","arguments","undefined","ServiceWorkerRegistration","prototype","sync","concat","requestNotificationPermission","permission","Notification","requestPermission","title","body","options","notificationOptions","_objectSpread","icon","badge","vibrate","updateApp","waiting","postMessage","location","reload","eventName","gtag","isInstalled","matchMedia","matches","standalone","getNetworkStatus","_navigator$connection","_navigator$connection2","_navigator$connection3","connectionType","connection","effectiveType","downlink","rtt","getStorageEstimate","storage","estimate","quota","usage","usageDetails","cleanup","removeEventListener","handleVisibilityChange","pwaUtils","usePWA","setIsOnline","useState","setIsInstalled","setShowInstallPrompt","updateAvailable","setUpdateAvailable","useEffect","handleInstallPrompt","handleHideInstallPrompt","handleUpdateAvailable","networkStatus","storageEstimate"],"sources":["/workspace/client/src/utils/pwa.js"],"sourcesContent":["/**\n * Progressive Web App utilities\n * Handles service worker registration, offline detection, and PWA features\n */\n\nimport React from 'react';\n\nclass PWAUtils {\n  constructor() {\n    this.deferredPrompt = null;\n    this.isOnline = navigator.onLine;\n    this.serviceWorker = null;\n    this.registration = null;\n\n    this.init();\n  }\n\n  init() {\n    this.registerServiceWorker();\n    this.setupNetworkListeners();\n    this.setupInstallPrompt();\n    this.setupVisibilityChange();\n  }\n\n  // Service Worker Registration\n  async registerServiceWorker() {\n    if ('serviceWorker' in navigator) {\n      try {\n        this.registration = await navigator.serviceWorker.register('/sw.js', {\n          scope: '/'\n        });\n\n        console.log('[PWA] Service Worker registered:', this.registration.scope);\n\n        // Handle updates\n        this.registration.addEventListener('updatefound', () => {\n          const newWorker = this.registration.installing;\n          if (newWorker) {\n            newWorker.addEventListener('statechange', () => {\n              if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n                this.showUpdateNotification();\n              }\n            });\n          }\n        });\n\n        // Listen for messages from service worker\n        navigator.serviceWorker.addEventListener('message', (event) => {\n          this.handleServiceWorkerMessage(event);\n        });\n\n        return this.registration;\n      } catch (error) {\n        console.error('[PWA] Service Worker registration failed:', error);\n        return null;\n      }\n    } else {\n      console.warn('[PWA] Service Workers not supported');\n      return null;\n    }\n  }\n\n  // Network status monitoring\n  setupNetworkListeners() {\n    window.addEventListener('online', () => {\n      this.isOnline = true;\n      this.handleNetworkChange(true);\n    });\n\n    window.addEventListener('offline', () => {\n      this.isOnline = false;\n      this.handleNetworkChange(false);\n    });\n  }\n\n  handleNetworkChange(isOnline) {\n    // Dispatch custom event for React components\n    const event = new CustomEvent('networkChange', {\n      detail: { isOnline }\n    });\n    window.dispatchEvent(event);\n\n    // Show notification\n    if (isOnline) {\n      this.showNotification('Back online! Syncing your changes...', 'success');\n      this.syncOfflineData();\n    } else {\n      this.showNotification('You\\'re offline. Changes will sync when back online.', 'warning');\n    }\n  }\n\n  // Install prompt handling\n  setupInstallPrompt() {\n    window.addEventListener('beforeinstallprompt', (event) => {\n      event.preventDefault();\n      this.deferredPrompt = event;\n\n      // Show install button\n      this.showInstallPrompt();\n    });\n\n    window.addEventListener('appinstalled', () => {\n      console.log('[PWA] App installed successfully');\n      this.hideInstallPrompt();\n      this.trackEvent('app_installed');\n    });\n  }\n\n  showInstallPrompt() {\n    const event = new CustomEvent('showInstallPrompt', {\n      detail: { prompt: this.deferredPrompt }\n    });\n    window.dispatchEvent(event);\n  }\n\n  hideInstallPrompt() {\n    const event = new CustomEvent('hideInstallPrompt');\n    window.dispatchEvent(event);\n  }\n\n  async installApp() {\n    if (!this.deferredPrompt) return false;\n\n    try {\n      this.deferredPrompt.prompt();\n      const { outcome } = await this.deferredPrompt.userChoice;\n\n      if (outcome === 'accepted') {\n        console.log('[PWA] User accepted install prompt');\n        this.trackEvent('install_prompt_accepted');\n      } else {\n        console.log('[PWA] User dismissed install prompt');\n        this.trackEvent('install_prompt_dismissed');\n      }\n\n      this.deferredPrompt = null;\n      return outcome === 'accepted';\n    } catch (error) {\n      console.error('[PWA] Install prompt failed:', error);\n      return false;\n    }\n  }\n\n  // Visibility change handling\n  setupVisibilityChange() {\n    document.addEventListener('visibilitychange', () => {\n      if (document.hidden) {\n        this.handleAppHidden();\n      } else {\n        this.handleAppVisible();\n      }\n    });\n  }\n\n  handleAppHidden() {\n    // Save any pending changes\n    this.savePendingChanges();\n  }\n\n  handleAppVisible() {\n    // Sync data and refresh if needed\n    if (this.isOnline) {\n      this.syncOfflineData();\n    }\n  }\n\n  // Offline data management\n  async savePendingChanges() {\n    try {\n      const pendingData = this.getPendingChanges();\n      if (pendingData && pendingData.length > 0) {\n        localStorage.setItem('pendingChanges', JSON.stringify(pendingData));\n        console.log('[PWA] Pending changes saved');\n      }\n    } catch (error) {\n      console.error('[PWA] Failed to save pending changes:', error);\n    }\n  }\n\n  async syncOfflineData() {\n    try {\n      const pendingChanges = localStorage.getItem('pendingChanges');\n      if (pendingChanges) {\n        const changes = JSON.parse(pendingChanges);\n\n        // Sync each change\n        for (const change of changes) {\n          await this.syncChange(change);\n        }\n\n        // Clear pending changes\n        localStorage.removeItem('pendingChanges');\n        console.log('[PWA] Offline data synced successfully');\n\n        this.showNotification('All changes synced successfully!', 'success');\n      }\n    } catch (error) {\n      console.error('[PWA] Failed to sync offline data:', error);\n      this.showNotification('Failed to sync some changes. Please try again.', 'error');\n    }\n  }\n\n  async syncChange(change) {\n    // Implement sync logic based on change type\n    switch (change.type) {\n      case 'project':\n        return this.syncProjectChange(change);\n      case 'circuit':\n        return this.syncCircuitChange(change);\n      case 'code':\n        return this.syncCodeChange(change);\n      default:\n        console.warn('[PWA] Unknown change type:', change.type);\n    }\n  }\n\n  // Background sync registration\n  async registerBackgroundSync(tag, data = {}) {\n    if ('serviceWorker' in navigator && 'sync' in window.ServiceWorkerRegistration.prototype) {\n      try {\n        await this.registration.sync.register(tag, {\n          data: data\n        });\n        console.log(`[PWA] Background sync registered: ${tag}`);\n      } catch (error) {\n        console.error(`[PWA] Background sync registration failed: ${tag}`, error);\n      }\n    }\n  }\n\n  // Push notifications\n  async requestNotificationPermission() {\n    if ('Notification' in window) {\n      const permission = await Notification.requestPermission();\n      return permission === 'granted';\n    }\n    return false;\n  }\n\n  async showNotification(title, body, options = {}) {\n    if ('Notification' in window && Notification.permission === 'granted') {\n      const notificationOptions = {\n        icon: '/icons/icon-192x192.png',\n        badge: '/icons/icon-72x72.png',\n        vibrate: [100, 50, 100],\n        ...options\n      };\n\n      if (this.registration) {\n        this.registration.showNotification(title, {\n          body,\n          ...notificationOptions\n        });\n      } else {\n        new Notification(title, {\n          body,\n          ...notificationOptions\n        });\n      }\n    }\n  }\n\n  // Service worker message handling\n  handleServiceWorkerMessage(event) {\n    const { type, data } = event.data;\n\n    switch (type) {\n      case 'SYNC_COMPLETE':\n        this.showNotification('Sync complete!', 'Your offline changes have been saved.', 'success');\n        break;\n      case 'CACHE_UPDATED':\n        this.showNotification('App updated', 'A new version is available. Refresh to update.', 'info');\n        break;\n      case 'OFFLINE_READY':\n        this.showNotification('Offline ready', 'You can now work offline!', 'success');\n        break;\n      default:\n        console.log('[PWA] Service worker message:', type, data);\n    }\n  }\n\n  // Update handling\n  showUpdateNotification() {\n    const event = new CustomEvent('appUpdateAvailable');\n    window.dispatchEvent(event);\n  }\n\n  async updateApp() {\n    if (this.registration && this.registration.waiting) {\n      this.registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n      window.location.reload();\n    }\n  }\n\n  // Analytics and tracking\n  trackEvent(eventName, data = {}) {\n    // Send to analytics service\n    if (window.gtag) {\n      window.gtag('event', eventName, data);\n    }\n\n    // Log for debugging\n    console.log('[PWA] Event tracked:', eventName, data);\n  }\n\n  // Utility methods\n  getPendingChanges() {\n    // Get pending changes from various sources\n    const changes = [];\n\n    // Add logic to collect pending changes from different parts of the app\n    // This would be implemented based on the specific data structures used\n\n    return changes;\n  }\n\n  isInstalled() {\n    return window.matchMedia('(display-mode: standalone)').matches ||\n           window.navigator.standalone === true;\n  }\n\n  getNetworkStatus() {\n    return {\n      isOnline: this.isOnline,\n      connectionType: navigator.connection?.effectiveType || 'unknown',\n      downlink: navigator.connection?.downlink || 0,\n      rtt: navigator.connection?.rtt || 0\n    };\n  }\n\n  // Storage management\n  async getStorageEstimate() {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      try {\n        const estimate = await navigator.storage.estimate();\n        return {\n          quota: estimate.quota,\n          usage: estimate.usage,\n          usageDetails: estimate.usageDetails\n        };\n      } catch (error) {\n        console.error('[PWA] Storage estimate failed:', error);\n      }\n    }\n    return null;\n  }\n\n  // Cleanup\n  cleanup() {\n    // Remove event listeners\n    window.removeEventListener('online', this.handleNetworkChange);\n    window.removeEventListener('offline', this.handleNetworkChange);\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n  }\n}\n\n// Create singleton instance\nconst pwaUtils = new PWAUtils();\n\n// Export for use in React components\nexport default pwaUtils;\n\n// React hook for PWA functionality\nexport const usePWA = () => {\n  const [isOnline, setIsOnline] = React.useState(navigator.onLine);\n  const [isInstalled, setIsInstalled] = React.useState(pwaUtils.isInstalled());\n  const [showInstallPrompt, setShowInstallPrompt] = React.useState(false);\n  const [updateAvailable, setUpdateAvailable] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleNetworkChange = (event) => {\n      setIsOnline(event.detail.isOnline);\n    };\n\n    const handleInstallPrompt = () => {\n      setShowInstallPrompt(true);\n    };\n\n    const handleHideInstallPrompt = () => {\n      setShowInstallPrompt(false);\n    };\n\n    const handleUpdateAvailable = () => {\n      setUpdateAvailable(true);\n    };\n\n    window.addEventListener('networkChange', handleNetworkChange);\n    window.addEventListener('showInstallPrompt', handleInstallPrompt);\n    window.addEventListener('hideInstallPrompt', handleHideInstallPrompt);\n    window.addEventListener('appUpdateAvailable', handleUpdateAvailable);\n\n    return () => {\n      window.removeEventListener('networkChange', handleNetworkChange);\n      window.removeEventListener('showInstallPrompt', handleInstallPrompt);\n      window.removeEventListener('hideInstallPrompt', handleHideInstallPrompt);\n      window.removeEventListener('appUpdateAvailable', handleUpdateAvailable);\n    };\n  }, []);\n\n  return {\n    isOnline,\n    isInstalled,\n    showInstallPrompt,\n    updateAvailable,\n    installApp: () => pwaUtils.installApp(),\n    updateApp: () => pwaUtils.updateApp(),\n    networkStatus: pwaUtils.getNetworkStatus(),\n    storageEstimate: pwaUtils.getStorageEstimate()\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}