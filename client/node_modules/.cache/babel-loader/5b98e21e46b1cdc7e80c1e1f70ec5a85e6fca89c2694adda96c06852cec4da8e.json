{"ast":null,"code":"/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = string => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = string => string.replace(/^([A-Z])|[\\s-_]+(\\w)/g, (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase());\nconst toPascalCase = string => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = props => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\nexport { hasA11yProp, mergeClasses, toCamelCase, toKebabCase, toPascalCase };","map":{"version":3,"names":["toKebabCase","string","replace","toLowerCase","toCamelCase","match","p1","p2","toUpperCase","toPascalCase","camelCase","charAt","slice","mergeClasses","classes","filter","className","index","array","Boolean","trim","indexOf","join","hasA11yProp","props","prop","startsWith"],"sources":["C:/Users/DELL/Documents/CascadeProjects/embedded/client/node_modules/lucide-react/dist/esm/shared/src/utils.js"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\nexport { hasA11yProp, mergeClasses, toCamelCase, toKebabCase, toPascalCase };\n//# sourceMappingURL=utils.js.map\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,WAAW,GAAIC,MAAM,IAAKA,MAAM,CAACC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAACC,WAAW,CAAC,CAAC;AAC3F,MAAMC,WAAW,GAAIH,MAAM,IAAKA,MAAM,CAACC,OAAO,CAC5C,uBAAuB,EACvB,CAACG,KAAK,EAAEC,EAAE,EAAEC,EAAE,KAAKA,EAAE,GAAGA,EAAE,CAACC,WAAW,CAAC,CAAC,GAAGF,EAAE,CAACH,WAAW,CAAC,CAC5D,CAAC;AACD,MAAMM,YAAY,GAAIR,MAAM,IAAK;EAC/B,MAAMS,SAAS,GAAGN,WAAW,CAACH,MAAM,CAAC;EACrC,OAAOS,SAAS,CAACC,MAAM,CAAC,CAAC,CAAC,CAACH,WAAW,CAAC,CAAC,GAAGE,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;AAC/D,CAAC;AACD,MAAMC,YAAY,GAAGA,CAAC,GAAGC,OAAO,KAAKA,OAAO,CAACC,MAAM,CAAC,CAACC,SAAS,EAAEC,KAAK,EAAEC,KAAK,KAAK;EAC/E,OAAOC,OAAO,CAACH,SAAS,CAAC,IAAIA,SAAS,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIF,KAAK,CAACG,OAAO,CAACL,SAAS,CAAC,KAAKC,KAAK;AAC5F,CAAC,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC,CAAC;AACnB,MAAMG,WAAW,GAAIC,KAAK,IAAK;EAC7B,KAAK,MAAMC,IAAI,IAAID,KAAK,EAAE;IACxB,IAAIC,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC,IAAID,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,OAAO,EAAE;MACnE,OAAO,IAAI;IACb;EACF;AACF,CAAC;AAED,SAASF,WAAW,EAAEV,YAAY,EAAET,WAAW,EAAEJ,WAAW,EAAES,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}